name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - 'code-base/**'
      - 'docker/**'
      - 'K8s/**'
      - 'observability/**'
      - '.github/workflows/**'

  workflow_dispatch:

jobs:
  terraform:
    name: 🌱 Provision EKS Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 🧰 Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: ⚙️ Terraform Init & Plan
        working-directory: terraform
        run: |
          terraform init
          terraform plan -out=tfplan
        # terraform apply -auto-approve tfplan


  build-and-push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build and Push Docker Image
        run: |
          docker build -t vinaygolkonda99/llm_deps:llm_app -f docker/Dockerfile.app .
          docker push vinaygolkonda99/llm_deps:llm_app


  observability-stack:
    name: 📊 Install ArgoCD & Trigger App of Apps
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 🧭 Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name mlops-cluster

      - name: 🚀 Install ArgoCD
        run: |
          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl wait --for=condition=available --timeout=180s deployment/argocd-server -n argocd

      - name: 🚀 Apply ArgoCD App of Apps (observability.yaml)
        run: |
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -n argocd -f observability/argo-apps/observability.yaml
